conexion<-dbConnect(drv=driver,host=host,port=port,username=user,password=password,dbname=dbname)
dbIsValid(conexion)
#View(CAUSAS %>% filter(str_detect(nombre, "ENFERMEDAD ")))
class(fallecidos_sinadef)
#parametros de la conexion
driver=MySQL()
host = "35.174.139.24"
port = 3306
user="admin"
password="admin2020"
dbname="COVID_DB"
dbDisconnect(conexion)
#2.	Crear conexion a la base de datos
dbCanConnect(drv=driver,host=host,port=port,username=user,password=password,dbname=dbname)
conexion<-dbConnect(drv=driver,host=host,port=port,username=user,password=password,dbname=dbname)
dbIsValid(conexion)
#fallecidos_sinadef = as.data.frame(fallecidos_sinadef)
#class(fallecidos_sinadef)
dbWriteTable(conexion,"PAIS", PAIS)
dbWriteTable(conexion,"DISTRITO",DISTRITO)
dbWriteTable(conexion,"PROVINCIA",PROVINCIA)
dbWriteTable(conexion,"DEPARTAMENTO",DEPARTAMENTO)
dbWriteTable(conexion,"FALLECIDO_COVID", fallecidos_covid_data)
#dbRemoveTable(conexion,"CAUSA")
dbWriteTable(conexion,"CAUSA", CAUSAS)
dbWriteTable(conexion,"POSITIVO_COVID", positivos_covid_data)
View(conexion)
dbWriteTable(conexion,"METODO", METODO)
dbWriteTable(conexion,"SEXO", SEXO)
dbWriteTable(conexion,"INSTITUCION", INSTITUCION)
dbWriteTable(conexion,"SEGURO", SEGURO)
dbWriteTable(conexion,"LUGAR", LUGAR)
dbWriteTable(conexion,"NIVEL_INSTRUCCION", NIVEL_INSTRUCCION)
dbWriteTable(conexion,"FALLECIDO_CAUSA", FALLECIDO_CAUSA)
dbWriteTable(conexion,"FALLECIDO_SINADEF", fallecidos_sinadef)
#Query 1
dbListTables(conexion)
#id<-as.numeric(rstudioapi::showPrompt(title = "GAAAA", message = "Ingrese el Id del usuaio", default = 100001))
#Cantidad de muertes por covid en Lima Departamento
dbListFields(conexion, "FALLECIDO_COVID")
dbListFields(conexion, "DEPARTAMENTO")
q6<-dbGetQuery(conexion, fn$identity("select * from FALLECIDO_COVID INNER JOIN DEPARTAMENTO USING(Departamento_id, id)"))
q6<-dbGetQuery(conexion, fn$identity("select * from FALLECIDO_COVID INNER JOIN DEPARTAMENTO ON
FALLECIDO_COVID.DEPARTAMENTO_id=DEPARTAMENTO.id"))
View(q6)
q6<-dbGetQuery(conexion, fn$identity("select DEPARTAMENTO.nombre, FALLECIDO.id from FALLECIDO_COVID INNER JOIN DEPARTAMENTO ON
FALLECIDO_COVID.DEPARTAMENTO_id=DEPARTAMENTO.id"))
q6<-dbGetQuery(conexion, fn$identity("select DEPARTAMENTO.nombre, FALLECIDO_COVID.id from FALLECIDO_COVID INNER JOIN DEPARTAMENTO ON
FALLECIDO_COVID.DEPARTAMENTO_id=DEPARTAMENTO.id"))
View(q6)
q6<-dbGetQuery(conexion, fn$identity("select DEPARTAMENTO.nombre, FALLECIDO_COVID.id from FALLECIDO_COVID INNER JOIN DEPARTAMENTO ON
FALLECIDO_COVID.DEPARTAMENTO_id=DEPARTAMENTO.id
where DEPARTAMENTO.nombre = 'LIMA'"))
View(q6)
NROW(q6)
View(result = NROW(q6))
View(result = NROW(q6))
#Query 1 --- Cantidad de muertes por covid en Lima Departamento segun la informacion de FALLECIDOS_COVID
dbListFields(conexion, "FALLECIDO_CAUSA.")
#Query 1 --- Cantidad de muertes por covid en Lima Departamento segun la informacion de FALLECIDOS_COVID
dbListFields(conexion, "FALLECIDO_CAUSA")
dbListFields(conexion, "CAUSA")
#Query 1 --- Cantidad de muertes por covid en Lima Departamento segun la informacion de FALLECIDOS_COVID
dbListFields(conexion, "FALLECIDO_CAUSA")
#Query 1 --- Cantidad de muertes por covid en Lima Departamento segun la informacion de FALLECIDOS_COVID
dbListFields(conexion, "FALLECIDO_SINADEF")
#Query 1 --- Cantidad de muertes por covid en Lima Departamento segun la informacion de FALLECIDOS_COVID
dbListFields(conexion, "FALLECIDO_SINADEF")
View(fallecidos_sinadef)
dbListFields(conexion, "CAUSA")
View(DEPARTAMENTO)
fallecidos_sinadef = read.csv2("Data/fallecidos_sinadef.csv", encoding = "Latin-1", header = TRUE, na.strings=c(""," ","NA"))
#Fallecidos sinadef
fallecidos_sinadef$X......<-NULL
#Fallecidos sinadef
fallecidos_sinadef$X......<-NULL
#Fallecidos sinadef
fallecidos_sinadef$X......<-NULL
fallecidos_sinadef$X.2<-NULL
fallecidos_sinadef$X.1<-NULL
fallecidos_sinadef$X<-NULL
fallecidos_sinadef$COD..UBIGEO.DOMICILIO<-NULL
fallecidos_sinadef$CAUSA.A..CIE.X.<-NULL
fallecidos_sinadef$CAUSA.B..CIE.X.<-NULL
fallecidos_sinadef$CAUSA.C..CIE.X.<-NULL
fallecidos_sinadef$CAUSA.D..CIE.X.<-NULL
fallecidos_sinadef$CAUSA.E..CIE.X.<-NULL
fallecidos_sinadef$CAUSA.F..CIE.X.<-NULL
fallecidos_sinadef$AÑO<-NULL
fallecidos_sinadef$MES<-NULL
fecha_temp<-strptime(fallecidos_sinadef$FECHA,"%Y-%m-%d")
fallecidos_sinadef$FECHA <-fecha_temp
glimpse(fallecidos_sinadef)
fallecidos_sinadef[17:22] <- data.frame(lapply(fallecidos_sinadef[17:22], function(x) { gsub("Á", "A", x) }))
fallecidos_sinadef[17:22] <- data.frame(lapply(fallecidos_sinadef[17:22], function(x) { gsub("É", "E", x) }))
fallecidos_sinadef[17:22] <- data.frame(lapply(fallecidos_sinadef[17:22], function(x) { gsub("Í", "I", x) }))
fallecidos_sinadef[17:22] <- data.frame(lapply(fallecidos_sinadef[17:22], function(x) { gsub("Ó", "O", x) }))
fallecidos_sinadef[17:22] <- data.frame(lapply(fallecidos_sinadef[17:22], function(x) { gsub("Ú", "U", x) }))
#agregando sexo forenkey
indices<-match(fallecidos_sinadef$SEXO, SEXO$sexo)
#View(indices)
fallecidos_sinadef$SEXO_id = indices
fallecidos_sinadef<-fallecidos_sinadef[-c(3)]
#Agregando distrito forenkey
indices<-match(fallecidos_sinadef$`DISTRITO.DOMICILIO`, DISTRITO$nombre)
#View(indices)
fallecidos_sinadef$DISTRITO_id = indices
fallecidos_sinadef<-fallecidos_sinadef[-c(10)]
#Agregando Provincia forenkey
indices<-match(fallecidos_sinadef$`PROVINCIA.DOMICILIO`, PROVINCIA$nombre)
#View(indices)
fallecidos_sinadef$PROVINCIA_id = indices
fallecidos_sinadef<-fallecidos_sinadef[-c(9)]
#Agregando Departamento forenkey
indices<-match(fallecidos_sinadef$DEPARTAMENTO.DOMICILIO, DEPARTAMENTO$nombre)
View(indices)
#View(indices)
fallecidos_sinadef$DEPARTAMENTO_id = indices
fallecidos_sinadef<-fallecidos_sinadef[-c(8)]
#Agregando SEGURO forenkey
indices<-match(fallecidos_sinadef$`TIPO.SEGURO`, SEGURO$tipo)
#View(indices)
fallecidos_sinadef$SEGURO_id = indices
fallecidos_sinadef<-fallecidos_sinadef[-c(2)]
#Agregando NIVEL INSTRUCCION forenkey
indices<-match(fallecidos_sinadef$NIVEL.DE.INSTRUCCIÓN, NIVEL_INSTRUCCION$nivel)
#View(indices)
fallecidos_sinadef$NIVEL_INSTRUCCION_id = indices
fallecidos_sinadef<-fallecidos_sinadef[-c(5)]
#Agregando PAIS forenkey
indices<-match(fallecidos_sinadef$`PAIS.DOMICILIO`, PAIS$nombre)
#View(indices)
fallecidos_sinadef$PAIS_id = indices
fallecidos_sinadef<-fallecidos_sinadef[-c(5)]
#Agregando LUGAR forenkey
indices<-match(fallecidos_sinadef$`TIPO.LUGAR`, LUGAR$nombre)
#View(indices)
fallecidos_sinadef$LUGAR_id = indices
fallecidos_sinadef<-fallecidos_sinadef[-c(6)]
#Agregando NIVEL INSTITUCION forenkey
indices<-match(fallecidos_sinadef$INSTITUCION, INSTITUCION$nombre)
#View(indices)
fallecidos_sinadef$INSTITUCION_id = indices
fallecidos_sinadef<-fallecidos_sinadef[-c(6)]
##Eliminando ultimas columnas en fallecidos
fallecidos_sinadef <- fallecidos_sinadef[-c(8:13)]
colnames(fallecidos_sinadef)[1]  <- "id"
colnames(fallecidos_sinadef)[2]  <- "edad"
colnames(fallecidos_sinadef)[3]  <- "tiempo_edad"
colnames(fallecidos_sinadef)[4]  <- "estado_civil"
colnames(fallecidos_sinadef)[5]  <- "fecha"
colnames(fallecidos_sinadef)[6]  <- "muerte_violenta"
colnames(fallecidos_sinadef)[7]  <- "necropsia"
View(fallecidos_sinadef)
View(fallecidos_sinadef)
#Query 1 --- Cantidad de muertes por covid en Lima Departamento segun la informacion de FALLECIDOS_COVID
dbListFields(conexion, "FALLECIDO_SINADEF")
dbWriteTable(conexion,"FALLECIDO_SINADEF", fallecidos_sinadef)
dbRemoveTable(conexion,"FALLECIDO_SINADEF")
dbWriteTable(conexion,"FALLECIDO_SINADEF", fallecidos_sinadef)
#Query 2 --- Cantidad de muertes por covid en Lima Departamento segun la informacion de FALLECIDOS SINADEF
q6<-dbGedtQuery(conexion, fn$identity("select FALLECIDO_SINADEF.id, DEPARTAMENTO.nombre,CAUSA.nombre from CAUSA
INNER JOIN FALLECIDO_CAUSA ON CAUSA.id = FALLECIDO_CAUSA.CAUSA_id
INNER JOIN FALLECIDO_SINADEF on FALLECIDO_CAUSA.FALLECIDO_id = FALLECIDO_SINADEF.id
INNER JOIN DEPARTAMENTO on FALLECIDO_SINADEF.DEPARTAMENTO_id = DEPARTAMENTO.id
where DEPARTAMENTO.nombre = 'LIMA'"))
#Query 1 --- Cantidad de muertes por covid en Lima Departamento segun la informacion de FALLECIDOS_COVID
dbListFields(conexion, "FALLECIDO_SINADEF")
dbListFields(conexion, "CAUSA")
#Query 1 --- Cantidad de muertes por covid en Lima Departamento segun la informacion de FALLECIDOS_COVID
dbListFields(conexion, "FALLECIDO_CAUSA")
#Query 2 --- Cantidad de muertes por covid en Lima Departamento segun la informacion de FALLECIDOS SINADEF
q6<-dbGedtQuery(conexion, fn$identity("select FALLECIDO_SINADEF.id, DEPARTAMENTO.nombre,CAUSA.nombre from CAUSA
JOIN FALLECIDO_CAUSA ON CAUSA.id = FALLECIDO_CAUSA.CAUSA_id
JOIN FALLECIDO_SINADEF ON FALLECIDO_CAUSA.FALLECIDO_id = FALLECIDO_SINADEF.id
JOIN DEPARTAMENTO on FALLECIDO_SINADEF.DEPARTAMENTO_id = DEPARTAMENTO.id"))
dbListTables(conexion)
#Query 2 --- Cantidad de muertes por covid en Lima Departamento segun la informacion de FALLECIDOS SINADEF
q6<-dbGedtQuery(conexion, fn$identity("select FALLECIDO_SINADEF.id, DEPARTAMENTO.nombre,CAUSA.nombre from CAUSA
JOIN FALLECIDO_CAUSA ON CAUSA.id = FALLECIDO_CAUSA.CAUSA_id
JOIN FALLECIDO_SINADEF ON FALLECIDO_CAUSA.FALLECIDO_id = FALLECIDO_SINADEF.id
JOIN DEPARTAMENTO on FALLECIDO_SINADEF.DEPARTAMENTO_id = DEPARTAMENTO.id"))
library(RMySQL)
#Query 2 --- Cantidad de muertes por covid en Lima Departamento segun la informacion de FALLECIDOS SINADEF
q6<-dbGedtQuery(conexion, fn$identity("select FALLECIDO_SINADEF.id, DEPARTAMENTO.nombre,CAUSA.nombre from CAUSA
JOIN FALLECIDO_CAUSA ON CAUSA.id = FALLECIDO_CAUSA.CAUSA_id
JOIN FALLECIDO_SINADEF ON FALLECIDO_CAUSA.FALLECIDO_id = FALLECIDO_SINADEF.id
JOIN DEPARTAMENTO on FALLECIDO_SINADEF.DEPARTAMENTO_id = DEPARTAMENTO.id"))
##
q1<-dbGedtQuery(conexion, fn$identity("select DEPARTAMENTO.nombre, FALLECIDO_COVID.id from FALLECIDO_COVID INNER JOIN DEPARTAMENTO ON
FALLECIDO_COVID.DEPARTAMENTO_id=DEPARTAMENTO.id
where DEPARTAMENTO.nombre = 'LIMA'"))
##
q1<-dbGedtQuery(conexion, fn$identity("select DEPARTAMENTO.nombre, FALLECIDO_COVID.id from FALLECIDO_COVID INNER JOIN DEPARTAMENTO ON
FALLECIDO_COVID.DEPARTAMENTO_id=DEPARTAMENTO.id
where DEPARTAMENTO.nombre = 'LIMA'"))
dbIsValid(conexion)
#Query 1 --- Cantidad de muertes por covid en Lima Departamento segun la informacion de FALLECIDOS_COVID
dbListFields(conexion, "FALLECIDO_CAUSA")
dbListFields(conexion, "CAUSA")
##
q1<-dbGedtQuery(conexion, fn$identity("select DEPARTAMENTO.nombre, FALLECIDO_COVID.id from FALLECIDO_COVID INNER JOIN DEPARTAMENTO ON
FALLECIDO_COVID.DEPARTAMENTO_id=DEPARTAMENTO.id
where DEPARTAMENTO.nombre = 'LIMA'"))
dbDisconnect(conexion)
#2.	Crear conexion a la base de datos
dbCanConnect(drv=driver,host=host,port=port,username=user,password=password,dbname=dbname)
conexion<-dbConnect(drv=driver,host=host,port=port,username=user,password=password,dbname=dbname)
dbIsValid(conexion)
dbListTables(conexion)
#Query 1 --- Cantidad de muertes por covid en Lima Departamento segun la informacion de FALLECIDOS_COVID
dbListFields(conexion, "FALLECIDO_CAUSA")
dbListFields(conexion, "CAUSA")
dbListTables(conexion)
##
q1<-dbGedtQuery(conexion, fn$identity("select DEPARTAMENTO.nombre, FALLECIDO_COVID.id from FALLECIDO_COVID INNER JOIN DEPARTAMENTO ON
FALLECIDO_COVID.DEPARTAMENTO_id=DEPARTAMENTO.id
where DEPARTAMENTO.nombre = 'LIMA'"))
q3<-dbGetQuery(conexion, "select * from CAUSA")
View(fallecidos_covid_data)
##
q1<-dbGedtQuery(conexion, fn$identity("select DEPARTAMENTO.nombre, FALLECIDO_COVID.id from FALLECIDO_COVID INNER JOIN DEPARTAMENTO ON
FALLECIDO_COVID.DEPARTAMENTO_id=DEPARTAMENTO.id
where DEPARTAMENTO.nombre = 'LIMA'"))
##
q1<-dbGedtQuery(conexion, fn$identity("select DEPARTAMENTO.nombre, FALLECIDO_COVID.id from FALLECIDO_COVID INNER JOIN DEPARTAMENTO ON
FALLECIDO_COVID.DEPARTAMENTO_id=DEPARTAMENTO.id
where DEPARTAMENTO.nombre = 'LIMA'"))
##
q1<-dbGedtQuery(conexion, "select DEPARTAMENTO.nombre, FALLECIDO_COVID.id from FALLECIDO_COVID INNER JOIN DEPARTAMENTO ON
FALLECIDO_COVID.DEPARTAMENTO_id=DEPARTAMENTO.id
where DEPARTAMENTO.nombre = 'LIMA'")
##
q1<-dbGedtQuery(conexion, "select DEPARTAMENTO.nombre, FALLECIDO_COVID.id from FALLECIDO_COVID INNER JOIN DEPARTAMENTO ON
FALLECIDO_COVID.DEPARTAMENTO_id=DEPARTAMENTO.id                                   where DEPARTAMENTO.nombre = 'LIMA'")
##
q1<-dbGedtQuery(conexion, "select DEPARTAMENTO.nombre, FALLECIDO_COVID.id from FALLECIDO_COVID INNER JOIN DEPARTAMENTO ON
FALLECIDO_COVID.DEPARTAMENTO_id=DEPARTAMENTO.id where DEPARTAMENTO.nombre = 'LIMA'")
##
q1<-dbGedtQuery(conexion, "select DEPARTAMENTO.nombre, FALLECIDO_COVID.id from FALLECIDO_COVID INNER JOIN DEPARTAMENTO ON FALLECIDO_COVID.DEPARTAMENTO_id=DEPARTAMENTO.id where DEPARTAMENTO.nombre = 'LIMA'")
##
q1<-dbGetQuery(conexion, "select DEPARTAMENTO.nombre, FALLECIDO_COVID.id from FALLECIDO_COVID
INNER JOIN DEPARTAMENTO ON FALLECIDO_COVID.DEPARTAMENTO_id=DEPARTAMENTO.id
where DEPARTAMENTO.nombre = 'LIMA'")
NROW(q6)
#Query 2 --- Cantidad de muertes por covid en Lima Departamento segun la informacion de FALLECIDOS SINADEF
q2<-dbGetQuery(conexion, fn$identity("select FALLECIDO_SINADEF.id, DEPARTAMENTO.nombre,CAUSA.nombre from CAUSA
JOIN FALLECIDO_CAUSA ON CAUSA.id = FALLECIDO_CAUSA.CAUSA_id
JOIN FALLECIDO_SINADEF ON FALLECIDO_CAUSA.FALLECIDO_id = FALLECIDO_SINADEF.id
JOIN DEPARTAMENTO on FALLECIDO_SINADEF.DEPARTAMENTO_id = DEPARTAMENTO.id"))
library(tidyverse)
library(lubridate)
library(dbplyr)
library(readxl)
#install.packages("gsubfn")
library(gsubfn)
library(RMySQL)
library(DBI)
library(wakefield)
library(rvest)
#parametros de la conexion
driver=MySQL()
host = "35.174.139.24"
port = 3306
user="admin"
password="admin2020"
dbname="COVID_DB"
#2.	Crear conexion a la base de datos
dbCanConnect(drv=driver,host=host,port=port,username=user,password=password,dbname=dbname)
#parametros de la conexion
driver=MySQL()
host = "35.174.139.24"
port = 3306
user="admin"
password="admin2020"
dbname="COVID_DB"
#2.	Crear conexion a la base de datos
dbCanConnect(drv=driver,host=host,port=port,username=user,password=password,dbname=dbname)
attr(,"reason")
install.packages("RMySQL")
install.packages("RMySQL")
install.packages("RMySQL")
install.packages("RMySQL")
#parametros de la conexion
driver=MySQL()
host = "35.174.139.24"
port = 3306
user="admin"
password="admin2020"
dbname="COVID_DB"
dbIsValid(conexion)
conexion<-dbConnect(drv=driver,host=host,port=port,username=user,password=password,dbname=dbname)
dbIsValid(conexion)
install.packages("RODBC")
library(RODBC)
dbhandle odbcDriverConnect('driver{SQLServer};server=Servername;database=databasename;trusted_connection=true')
dbhandle odbcDriverConnect('driver{SQLServer};server=Servername;database=databasename;trusted_connection=true')
library(tidyverse)
library(lubridate)
library(dbplyr)
library(readxl)
#install.packages("gsubfn")
library(gsubfn)
library(RMySQL)
library(DBI)
library(wakefield)
library(rvest)
#Read
positivos_covid_data = read_xlsx("Data/positivos_covid.csv", encoding = "Latin-1", header = TRUE, na.strings=c(""," ","NA"))
#Read
positivos_covid_data = read_xlsx("Data/positivos_covid.xls")
#Read
positivos_covid_data = read_xlsx("Data/positivos_covid..xlsx")
#Read
positivos_covid_data = read_xlsx("Data/positivos_covid..xlsx")
#Read
positivos_covid_data = read_xlsx("Data/positivos_covid..xlsx")
fallecidos_covid_data = read.csv2("Data/fallecidos_covid.csv", encoding = "Latin-1",header = TRUE, na.strings=c(""," ","NA"))
#Read
positivos_covid_data = read_xlsx("Data/positivos_covid.xlsx")
library(tidyverse)
library(lubridate)
library(dbplyr)
library(readxl)
#install.packages("gsubfn")
library(gsubfn)
library(RMySQL)
library(DBI)
library(wakefield)
library(rvest)
#Read
positivos_covid_data = read_xlsx("Data/positivos_covid.xlsx")
View(positivos_covid_data)
#2.	Crear conexion a la base de datos
dbCanConnect(drv=driver,host=host,port=port,username=user,password=password,dbname=dbname)
#parametros de la conexion
driver=MySQL()
#parametros de la conexion
driver=MySQL()
#parametros de la conexion
driver=MySQL()
#parametros de la conexion
driver=MySQL()
#parametros de la conexion
driver=MySQL()
host = "35.174.139.24"
port = 3306
user="admin"
password="admin2020"
dbname="COVID_DB"
#2.	Crear conexion a la base de datos
dbCanConnect(drv=driver,host=host,port=port,username=user,password=password,dbname=dbname)
dbListFields(conexion, "NIVEL_INSTRUCCION")
host = "35.174.139.24"
conexion<-dbConnect(drv=driver,host=host,port=port,username=user,password=password,dbname=dbname)
conexion<-dbConnect(drv=driver,host=host,port=port,username=user,password=password,dbname=dbname)
dbIsValid(conexion)
dbListFields(conexion, "NIVEL_INSTRUCCION")
q27 = dbGetQuery(conexion, "select NIVEL_INSTRUCCION.nivel, COUNT(FALLECIDOS_SINADEF.id) from NIVEL_INSTRUCCION
JOIN FALLECIDOS_SINADEF ON NIVEL_INSTRUCCION.id = FALLECIDOS_SINADEF.NIVEL_INSTRUCCION_id
GROUP BY NIVEL_INSTRUCCION.NIVEL" )
q27 = dbGetQuery(conexion, "select NIVEL_INSTRUCCION.nivel, COUNT(FALLECIDO_SINADEF.id) from NIVEL_INSTRUCCION
JOIN FALLECIDO_SINADEF ON NIVEL_INSTRUCCION.id = FALLECIDO_SINADEF.NIVEL_INSTRUCCION_id
GROUP BY NIVEL_INSTRUCCION.NIVEL" )
View(q27)
dbListFields(conexion, "FALLECIDO_SINADEF")
q27 = dbGetQuery(conexion, "select NIVEL_INSTRUCCION.nivel, COUNT(FALLECIDO_SINADEF.id) from NIVEL_INSTRUCCION
JOIN FALLECIDO_SINADEF ON NIVEL_INSTRUCCION.id = FALLECIDO_SINADEF.NIVEL_INSTRUCCION_id
WHERE YEAR(FALLECIDO_SINADEF.fecha) = '2020'
GROUP BY NIVEL_INSTRUCCION.NIVEL" )
View(q27)
q27
dbListFields(conexion, "PAIS")
q28 = dbGetQuery(conexion, "select PAIS.NOMBRE, COUNT(FALLECIDO_SINADEF.id) from PAIS
JOIN FALLECIDO_SINADEF ON PAIS.Id = FALLECIDO_SINADEF.PAIS_id
WHERE YEAR(FALLECIDO_SINADEF.fecha) = '2020'
GROUP BY PAIS.NOMBRE" )
View(q28)
dbListFields(conexion, "POSITIVO_COVID")
q29 = dbGetQuery(conexion, "SELECT id, edad from POSITIVO_COVID
ORDER BY EDAD ASC
LIMIT 1" )
View(q29)
q29 = dbGetQuery(conexion, "SELECT id, edad from POSITIVO_COVID
WHERE != 'NA'
ORDER BY EDAD ASC
LIMIT 1" )
q29 = dbGetQuery(conexion, "SELECT id, edad from POSITIVO_COVID
ORDER BY EDAD ASC
WHERE != 'NA'
LIMIT 1" )
q29 = dbGetQuery(conexion, "SELECT id, edad from POSITIVO_COVID
ORDER BY EDAD ASC
LIMIT 1
WHERE != 'NA'"
View(q29)
q29 = dbGetQuery(conexion, "SELECT id, edad from POSITIVO_COVID
ORDER BY EDAD ASC
LIMIT 1
WHERE  EDAD \!= 'NA'"
q29 = dbGetQuery(conexion, "SELECT id, edad from POSITIVO_COVID
ORDER BY EDAD ASC
LIMIT 1
WHERE  EDAD != 'NA'"
View(q29)
q29 = dbGetQuery(conexion, "SELECT id, edad from POSITIVO_COVID ORDER BY EDAD ASC
LIMIT 1
WHERE  EDAD != 'NA'")
q29 = dbGetQuery(conexion, "SELECT id, edad from POSITIVO_COVID ORDER BY EDAD ASC
LIMIT 1
WHERE  edad != 'NA'")
q29 = dbGetQuery(conexion, "SELECT id, edad from POSITIVO_COVID ORDER BY EDAD ASC
LIMIT 1
WHERE  edad != NA")
q29 = dbGetQuery(conexion, "SELECT id, edad from POSITIVO_COVID ORDER BY EDAD ASC
WHERE  edad != 'NA'")
q29 = dbGetQuery(conexion, "SELECT id, edad from POSITIVO_COVID
WHERE  edad != 'NA'")
View(q29)
q29 = dbGetQuery(conexion, "SELECT id, edad from POSITIVO_COVID
WHERE  edad != 'NA'
LIMIT 1")
View(q29)
q29 = dbGetQuery(conexion, "SELECT id, edad from POSITIVO_COVID
WHERE  edad != 'NA'
ORDER BY edad asc
LIMIT 1")
View(q29)
q29_mayor = dbGetQuery(conexion, "SELECT id, edad from POSITIVO_COVID
WHERE  edad != 'NA'
ORDER BY edad DESC
LIMIT 1")
q29_mayor
q30 = dbGetQuery(conexion, "select MONTH(fecha_resultado), COUNT(id) FROM POSITIVO_COVID
GROUP BY MONTH(fecha_resultado)" )
View(q30)
q30 = dbGetQuery(conexion, "select MONTH(fecha_resultado), COUNT(id) FROM POSITIVO_COVID
GROUP BY MONTH(fecha_resultado)
ORDEY BY asc" )
q30 = dbGetQuery(conexion, "select MONTH(fecha_resultado), COUNT(id) FROM POSITIVO_COVID
GROUP BY MONTH(fecha_resultado)
ORDEY BY COUNT(id) asc" )
q30 = dbGetQuery(conexion, "select MONTH(fecha_resultado), COUNT(id) FROM POSITIVO_COVID
GROUP BY MONTH(fecha_resultado)
ORDEY BY id asc" )
q30 = dbGetQuery(conexion, "select MONTH(fecha_resultado), COUNT(id) as cantidad_positivos FROM POSITIVO_COVID
GROUP BY MONTH(fecha_resultado)
ORDEY BY cantidad_positivos asc" )
q30 = dbGetQuery(conexion, "select MONTH(fecha_resultado), COUNT(id) as cantidad_positivos FROM POSITIVO_COVID
GROUP BY MONTH(fecha_resultado)" )
View(q30)
q30 = dbGetQuery(conexion, "select MONTH(fecha_resultado) as mes, COUNT(id) as cantidad_positivos FROM POSITIVO_COVID
GROUP BY MONTH(fecha_resultado)" )
View(q30)
q30
source(file="Configuracion.R")
source(file="Codigo/Configuracion.R")
source(file="Datos.R")
source(file="Datos.R")
source(file="Datos.R")
source(file="Datos.R")
source(file="Datos.R")
source(file="Datos.R")
source(file="Datos.R")
source(file="Datos.r")
source(file="Datos.r")
source(file="Datos.r")
#Read
positivos_covid_data = read_xlsx("Data/positivos_covid.xlsx")
fallecidos_covid_data = read.csv2("Data/fallecidos_covid.csv", encoding = "Latin-1",header = TRUE, na.strings=c(""," ","NA"))
fallecidos_sinadef = read.csv2("Data/fallecidos_sinadef.csv", encoding = "Latin-1", header = TRUE, na.strings=c(""," ","NA"))
source(file="Datos.r")
source(file="Codigo/Configuracion.R")
#Read
positivos_covid_data = read_xlsx("Data/positivos_covid.xlsx")
fallecidos_covid_data = read.csv2("Data/fallecidos_covid.csv", encoding = "Latin-1",header = TRUE, na.strings=c(""," ","NA"))
fallecidos_sinadef = read.csv2("Data/fallecidos_sinadef.csv", encoding = "Latin-1", header = TRUE, na.strings=c(""," ","NA"))
#View
View(positivos_covid_data)
View(fallecidos_covid_data)
View(fallecidos_sinadef)
#Positivos covid
positivos_covid_data$FECHA_CORTE<-NULL
positivos_covid_data$UUID<-NULL
fecha_temp<-strptime(positivos_covid_data$FECHA_RESULTADO,"%Y%m%d")
positivos_covid_data$FECHA_RESULTADO<-fecha_temp
glimpse(positivos_covid_data)
#Fallecidos covid
fallecidos_covid_data$FECHA_CORTE<-NULL
fallecidos_covid_data$UUID<-NULL
fecha_temp<-strptime(fallecidos_covid_data$FECHA_FALLECIMIENTO,"%Y%m%d")
fallecidos_covid_data$FECHA_FALLECIMIENTO <-fecha_temp
fecha_temp<-strptime(fallecidos_covid_data$FECHA_NAC,"%Y%m%d")
fallecidos_covid_data$FECHA_NAC <-fecha_temp
glimpse(fallecidos_covid_data)
#Fallecidos sinadef
fallecidos_sinadef$X......<-NULL
fallecidos_sinadef$X.2<-NULL
fallecidos_sinadef$X.1<-NULL
fallecidos_sinadef$X<-NULL
fallecidos_sinadef$COD..UBIGEO.DOMICILIO<-NULL
fallecidos_sinadef$CAUSA.A..CIE.X.<-NULL
fallecidos_sinadef$CAUSA.B..CIE.X.<-NULL
fallecidos_sinadef$CAUSA.C..CIE.X.<-NULL
fallecidos_sinadef$CAUSA.D..CIE.X.<-NULL
fallecidos_sinadef$CAUSA.E..CIE.X.<-NULL
fallecidos_sinadef$CAUSA.F..CIE.X.<-NULL
fallecidos_sinadef$AÑO<-NULL
fallecidos_sinadef$MES<-NULL
fecha_temp<-strptime(fallecidos_sinadef$FECHA,"%Y-%m-%d")
fallecidos_sinadef$FECHA <-fecha_temp
glimpse(fallecidos_sinadef)
